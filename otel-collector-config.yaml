receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  # hostmetrics:
  #   collection_interval: 30s
  #   scrapers:
  #     cpu:
  #     disk:
  #     load:
  #     memory:
  #     network:
  #     filesystem:
  #     paging:
  #     process:
  #     processes:
  # --- Add the docker_stats receiver ---
  docker_stats:
    endpoint: "unix:///var/run/docker.sock" 
    collection_interval: 10s               # How often to scrape metrics
    timeout: 10s
    api_version: "1.47"                     # Specify Docker API version (as string)


processors:
  batch: {}
  resource:
    attributes:
      # Add environment-wide tags if desired, use 'insert' to avoid overwriting
      - key: deployment.environment
        value: "development"
        action: insert

exporters:
  otlp: 
    endpoint: "ingest.in.signoz.cloud:443"
    tls:
      insecure: false
    headers:
      signoz-ingestion-key: dtsa409InZNwTUjVBS7WPrNLBsANF1ZnZJXd
  debug:
    verbosity: detailed

extensions:
  health_check: {}
  pprof: {}
  zpages: {}

service:
  telemetry:
    logs:
      level: "debug" # Set to debug for more verbose collector logs if needed
      # development: true # Consider disabling in production
      encoding: "json"
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [resource, batch]
      exporters: [otlp]
    metrics:
      receivers: [otlp, docker_stats] # Receive OTLP metrics AND docker stats
      processors: [resource, batch] # Apply resource attributes (like deployment.environment) and batch
      exporters: [otlp] # Remove debug exporter
    logs:
      receivers: [otlp]
      processors: [resource, batch] # Add resource processor if you want common attributes on logs too
      exporters: [otlp] # Send logs to SigNoz




      